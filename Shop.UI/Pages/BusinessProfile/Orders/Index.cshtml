@page
@model Shop.UI.Pages.BusinessProfile.Orders.IndexModel
<style type="text/css">
    .orders .column {
        padding: 12px !important;
        font-size: 12px;
        /*background-color: #F4F8F5;*/
    }

    .orders a {
        font-size: 12px;
    }

    .padit {
        padding: 0.2rem;
    }

    .details {
        margin: 4px 0px !important;
    }

    .orders-container {
        font-size: 12px;
    }

    .table-head {
        background-color: #dbdbdb;
    }

    .table-row {
        background-color: #efeeec;
    }

        .table-row a {
            width: 100%;
        }

    .orders-container .columns:not(:last-child) {
        margin-bottom: 1rem;
    }
</style>

<p class="title secondary--text">Pending Orders</p>
<div class="padit orders">
    @if (Model.Orders.Count() > 0)
    {
        <div class="orders-container">
            <div class="columns table-head">
                <div class="column is-1 has-text-weight-semibold is-uppercase">Created Date</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Order #</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Order Reference</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Created By</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Location</div>
                <div class="column is-1 has-text-weight-semibold is-uppercase">Order Total</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase"></div>
            </div>

            @foreach (var order in Model.Orders.Where(x => x.Status == Shop.Domain.Enums.OrderStatus.PendingApproval))
            {
                <div class="columns table-row">
                    <div class="column is-1">@order.Created.ToString("dd/MM/yyyy hh:mm tt", System.Globalization.CultureInfo.InvariantCulture)</div>
                    <div class="column is-2">@order.OrderNumber</div>
                    <div class="column is-2">@order.OrderRef</div>
                    <div class="column is-2">@order.User.FirstName @order.User.LastName</div>
                    <div class="column is-2">@order.Address.City</div>
                    <div class="column is-1">@order.SubTotal.ToString("N2")</div>
                    <div class="column is-2">
                        <a class="button secondary" onclick="toggleOrder(@order.Id)">View</a>
                        @if (User.Identity.Name.ToUpper() == order.CostCenter?.Authorizer?.NormalizedEmail
                          || User.Identity.Name.ToUpper() == order.Location?.Authorizer?.NormalizedEmail
                          || User.Claims.FirstOrDefault(x => x.Type == "type")?.Value == "superuser")
                        {
                            <br />
                            <a class="button secondary is-bg-green" href="@Url.Action("UpdateOrderStatus", "Shop", new { orderId = order.Id, status = Shop.Domain.Enums.OrderStatus.Complete })">Approve</a>
                            <br />
                            <a class="button secondary" style="background-color: #aaaaaa;" href="@Url.Action("UpdateOrderStatus", "Shop", new { orderId = order.Id, status = Shop.Domain.Enums.OrderStatus.Declined })">Decline</a>
                        }
                    </div>
                </div>
                <div class="columns is-hidden" id="order-p-@order.Id">
                    <div class="column is-9">
                        <div class="columns">
                            <div class="column is-1"></div>
                            <div class="column is-4 has-text-weight-semibold is-uppercase">Product</div>
                            <div class="column is-2 has-text-weight-semibold is-uppercase">Code</div>
                            <div class="column is-1 has-text-weight-semibold is-uppercase">UOM</div>
                            <div class="column is-1 has-text-weight-semibold is-uppercase">Price</div>
                            <div class="column is-1 has-text-weight-semibold is-uppercase">QTY</div>
                            <div class="column is-1 has-text-weight-semibold is-uppercase">Total</div>
                        </div>

                        @foreach (var product in order.OrderProducts)
                        {
                            <div class="columns">
                                <div class="column is-1">
                                    <img src="@product.Product.ImageUrl" />
                                </div>
                                <div class="column is-4">@product.Product.Name</div>
                                <div class="column is-2">@product.Product.ExternalId</div>
                                <div class="column is-1">@product.Product.Unit</div>
                                <div class="column is-1">@product.Product.Price?.ToString("N2")</div>
                                <div class="column is-1">@product.Qty</div>
                                <div class="column is-1">@((product.Qty * (product.Product.Price ?? 0m)).ToString("N2"))</div>
                            </div>
                        }
                    </div>
                    <div class="column is-3">
                        <div class="box">
                            <p class="subtitle">ORDER SUMMARY</p>
                            <p>Order Subtotal: <span class="primary--text has-text-weight-semibold">@order.OriginalSubtotal.ToString("N2")</span></p>
                            <p>Order Delivery: <span class="primary--text has-text-weight-semibold">@order.Delivery.ToString("N2")</span></p>
                            <p>Order Disctount: <span class="primary--text has-text-weight-semibold">@order.Discount.ToString("N2")</span></p>
                            <p>Order VAT: <span class="primary--text has-text-weight-semibold">@order.Vat.ToString("N2")</span></p>
                            <p>Order total (inc vat)</p>
                            <p class="primary--text has-text-weight-semibold">@order.SubTotal.ToString("N2")</p>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="clearfix"></div>
        <br />
        <p class="title secondary--text">Order History</p>
        <div class="orders-container">
            <div class="columns table-head">
                <div class="column is-1 has-text-weight-semibold is-uppercase">Created Date</div>
                <div class="column is-1 has-text-weight-semibold is-uppercase">Updated Date</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Order #</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Order Reference</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase">Created By</div>
                <div class="column is-1 has-text-weight-semibold is-uppercase">Location</div>
                <div class="column is-1 has-text-weight-semibold is-uppercase">Order Total</div>
                <div class="column is-2 has-text-weight-semibold is-uppercase"></div>
            </div>

            @foreach (var order in Model.Orders.Where(x => x.Status == Shop.Domain.Enums.OrderStatus.Complete
                                                     || x.Status == Shop.Domain.Enums.OrderStatus.Placed
                                                     || x.Status == Shop.Domain.Enums.OrderStatus.Declined))
            {
                <div class="columns table-row">
                    <div class="column is-1">
                        @order.Created.ToString("dd/MM/yyyy hh:mm tt", System.Globalization.CultureInfo.InvariantCulture)
                    </div>
                    <div class="column is-1">
                        @order.AuthorizedDate?.ToString("dd/MM/yyyy hh:mm tt", System.Globalization.CultureInfo.InvariantCulture)
                    </div>
                    <div class="column is-2">@order.OrderNumber</div>
                    <div class="column is-2">@order.OrderRef</div>
                    <div class="column is-2">@order.User.FirstName @order.User.LastName</div>
                    <div class="column is-1">@order.Address.City</div>
                    <div class="column is-1">@order.SubTotal.ToString("N2")</div>
                    <div class="column is-2">
                        <a class="button secondary" onclick="toggleOrder(@order.Id)">View</a>
                        @*<a class="button secondary is-bg-green">Add To Cart</a>*@
                        @if (order.Status == Shop.Domain.Enums.OrderStatus.Placed)
                        {
                            @*<span class='is-orange' style="font-style:italic">
                                    <a class="button secondary is-bg-green">Approved</a>
                                </span>*@
                            <span class='is-green has-text-weight-semibold' style="font-style:italic">
                                Approved
                            </span>
                        }
                        else if (order.Status == Shop.Domain.Enums.OrderStatus.Declined)
                        {
                            <span class='has-text-weight-semibold' style="font-style:italic">
                                Declined
                            </span>

                            @*<span class='is-orange' style="font-style:italic">
                                    <a class="button secondary is-bg-red">Declined</a>
                                </span>*@
                        }
                        else
                        {
                            <span class='is-green has-text-weight-semibold' style="font-style:italic">
                                Placed
                            </span>
                            @*<span class="is-green" style="font-style:italic">
                                    <a class="button secondary is-bg-green">Placed</a>
                                </span>*@
                        }
                    </div>
                </div>
                <div class="columns is-hidden" id="order-p-@order.Id">
                    <div class="column card is-9">

                        <div class="columns">
                            <div class="column is-1"></div>
                            <div class="column is-4 has-text-weight-semibold">Product</div>
                            <div class="column is-2 has-text-weight-semibold">Code</div>
                            <div class="column is-1 has-text-weight-semibold">UOM</div>
                            <div class="column is-1 has-text-weight-semibold">Price</div>
                            <div class="column is-1 has-text-weight-semibold">QTY</div>
                            <div class="column is-1 has-text-weight-semibold">Total</div>
                        </div>

                        @foreach (var product in order.OrderProducts)
                        {
                            <div class="columns">
                                <div class="column is-1">
                                    <img src="@product.Product.ImageUrl" />
                                </div>
                                <div class="column is-4">@product.Product.Name</div>
                                <div class="column is-2">@product.Product.ExternalId</div>
                                <div class="column is-1">@product.Product.Unit</div>
                                <div class="column is-1">@product.Product.Price?.ToString("N2")</div>
                                <div class="column is-1">@product.Qty</div>
                                <div class="column is-1">@((product.Qty * (product.Product.Price ?? 0m)).ToString("N2"))</div>
                            </div>
                        }
                    </div>
                    <div class="column is-3">
                        <div class="box">
                            <p class="subtitle">ORDER SUMMARY</p>
                            <p>Order Subtotal: <span class="primary--text has-text-weight-semibold">@order.OriginalSubtotal.ToString("N2")</span></p>
                            <p>Order Delivery: <span class="primary--text has-text-weight-semibold">@order.Delivery.ToString("N2")</span></p>
                            <p>Order Disctount: <span class="primary--text has-text-weight-semibold">@order.Discount.ToString("N2")</span></p>
                            <p>Order VAT: <span class="primary--text has-text-weight-semibold">@order.Vat.ToString("N2")</span></p>
                            <p>Order total (inc vat)</p>
                            <p class="primary--text has-text-weight-semibold">@order.SubTotal.ToString("N2")</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="column is-6">

            <div class="field">

                <div class="notification">
                    <p class="primary--text is-size-5" style="color:#0BDD6F">
                        No orders to display
                    </p>
                </div>
            </div>
            <div class="field">
                <a class="button secondary" asp-page="/Shop/Index">START SHOPPING</a>
            </div>
        </div>
    }
</div>

@section scripts {
    <script>

        var toggleOrder = function (orderId) {
            var el = document.getElementById('order-p-' + orderId);

            var hidden = el.classList.contains('is-hidden');
            if (hidden)
                el.classList.remove('is-hidden');
            else
                el.classList.add('is-hidden');
        }

    </script>
}